//BEST APPROCH
//Dutch National Flag algorithm

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int numsSize = nums.size();
        int low = 0;
        int mid = 0;
        int high = numsSize - 1;

        while (mid <= high) {
            if (nums[mid] < 1) {
                swap(nums[mid], nums[low]);
                ++mid;
                ++low;
            }
            else if (nums[mid] > 1) {
                swap(nums[mid], nums[high]);
                --high;
            }
            else {
                ++mid;
            }
        }
    }
};

/*
//Another approch
class Solution {
public:
    void sortColors(vector<int>& nums) {
        //counting colors in colorCount array
        vector<int> colorCount(3, 0);
        for (int i: nums) {
            ++colorCount[i];
        }

        //filling the nums array
        int index = 0;
        for (int j = 0; j < colorCount.size(); ++j) {
            cout<<j<<" : "<<colorCount[j]<<"\n";
            while (colorCount[j]--) {
                nums[index++] = j;
            }
        }
    }
};
*/
